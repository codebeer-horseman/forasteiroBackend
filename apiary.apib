FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# codebeerhorseman - ForasteiroBack

## Authentication Collection [/v1/api/authentication]
### checkToken [GET /v1/api/authentication/checkToken/{token}]

+ Parameters

    + token (string, required)

+ Response 200 (application/json)
        
        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
        
### login [POST /v1/api/authentication/login]
+ Request (application/json)

        {
            "email": "dandpb@gmail.com",
            "password": "123456"
        }

+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "token" : "qwerwdghfgbfg123",
            "username" : "Daniel",
            "expiredTime" : 12341234123
          },
          "message": null /* Or optional success message */
        }
### signUp [POST /v1/api/authentication/signUp]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "token" : "qwerwdghfgbfg123",
            "username" : "Daniel",
            "expiredTime" : 12341234123
          },
          "message": null /* Or optional success message */
        }
### logout [POST /v1/api/authentication/logout]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {},
          "message": null /* Or optional success message */
        }

## User Collection [/v1/api/auth/user]
### get userData [GET /v1/api/auth/user/userData]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "name" : "",
            "name" : "",
            "name" : "",
            "name" : "",
            "name" : ""
          },
          "message": null /* Or optional success message */
        }
### edit userData [PUT /v1/api/auth/user/userData]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### change Password [PUT /v1/api/auth/user/changePassword]]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }

## Event Collection [/event]
### nextEvents [GET /v1/api/event/nextEvents]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### lastEvents [GET /v1/api/event/lastEvents]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### searchEvent [POST /v1/api/event/searchEvent]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### eventDetail [GET /v1/api/event/eventDetail]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }

## Destination Collection [/destination]
### possibleDestination [GET  /v1/api/destination/possibleDestination]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### searchDestination [POST  /v1/api/destination/searchDestination]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### destinationDetail [POST  /v1/api/destination/destinationDetail]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }

## Purchase Collection [/purchase]
### orderDetail [GET /v1/api/auth/purchase/orderDetail]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### finishOrder [POST /v1/api/auth/purchase/finishOrder]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### myOrders [GET /v1/api/auth/purchase/myOrders]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### depositReceipt [POST /v1/api/auth/purchase/depositReceipt]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### giveup [POST /v1/api/auth/purchase/giveup]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }
### sendObservation [GET /v1/api/auth/purchase/sendObservation]
+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }



## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        {
          "status": "success",
          "data": {
            "isValid" : true
          },
          "message": null /* Or optional success message */
        }

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }